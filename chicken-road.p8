pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
 print("♥")
 px=64
 py=-16
 pd=1
 level=1
 dead=false
 died_how=""
 dialoguemode=false
 cars={}
 logs={}
 pads={}
 swirls={}
 prints={}

 music(0)

 init_cumheights()
 init_voice()

 add(pads, {x=32,y=-56})

 // spawn spawners
 spawners={}
 add(spawners,{y=-96,s=0.8,r=2.5,t=t(),ty="car"})
 add(spawners,{y=-88,s=-0.7,r=2.5,t=t(),ty="car"})
 add(spawners,{y=-17*8,s=0.8,r=3,t=t(),ty="car"})
 add(spawners,{y=-19*8,s=0.5,r=3.5,t=t(),ty="log"})
 add(spawners,{y=-21*8,s=0.8,r=3,t=t(),ty="car"})
 add(spawners,{y=-22*8,s=1.0,r=2,t=t(),ty="car"})
 add(spawners,{y=-24*8,s=-0.9,r=3,t=t(),ty="car"})
 add(spawners,{y=-25*8,s=-1.2,r=2.5,t=t(),ty="car"})
 add(spawners,{y=-27*8,s=-1.0,r=2.5,t=t(),ty="log"})
 spawn_pads(-28*8,0x318c)
 add(spawners,{y=-29*8,s=1.2,r=3,t=t(),ty="log"})
 add(spawners,{y=-31*8,s=-1.2,r=2,t=t(),ty="car"})
 add(spawners,{y=-32*8,s=1.2,r=3,t=t(),ty="log"})
 add(spawners,{y=-33*8,s=-1.5,r=2,t=t(),ty="car"})

 // prewarm spawners
 for s in all(spawners) do
  prewarm_spawner(s)
 end

 update_pos()
 oldcampos=get_campos()

 wasbuttons()
end

function _update()
 if dialoguemode then
  next_dialogue()
  sfx_voice_update()
 elseif not dead then
  player_movement()
 end
 update_pos()

 update_spawners()
 update_cars()
 update_logs()
 update_pads()

 -- check if death occurs
 check_death()

 wasbuttons()
end

function _draw()
 cls()
 update_camera()
 render_map()

 palt(0,false)
 palt(15,true)
 draw_spawners()
 draw_swirls()

 if dead then
  if died_how=="splat" then
   spr(48,px,py-1)
  elseif died_how=="drowned" then
   spr(49,px,py)
  else
   assert() // unkonwn reason
  end
 end

 draw_logs()
 draw_pads()

 //player
 if not dead then
  sp=0
  if pd==2 then sp=32
  elseif pd==3 then sp=16
  end
  sp+=(t()*4)%2
  spr(sp,px,py-1,1,1,pd==0)
 end

 draw_cars()
 draw_dialogue()


 camera(0,0)
 for i=1,#prints do
  print(prints[i])
 end
 prints={}
end

-->8
-- helper functions --

-- test overlap between bounding
-- boxes
function aabb_overlap(b0, b1)
 if b0.x<b1.x+b1.w and
    b0.x+b0.w>b1.x and
    b0.y<b1.y+b1.h and
    b0.y+b0.h>b1.y then
  return true
 else
  return false
 end
end
-- translate aabb
function trans_aabb(b, x, y)
  return{
   x=b.x+x,
   y=b.y+y,
   w=b.w,
   h=b.h
  }
end

function btnleft()
 return btn(⬅️) and not wasleft
end

function btnright()
 return btn(➡️) and not wasright
end

function btnup()
 return btn(⬆️) and not wasup
end

function btndown()
 return btn(⬇️) and not wasdown
end

function btno()
 return btn(🅾️) and not waso
end

function btnx()
 return btn(❎) and not wasx
end

function wasbuttons()
 wasleft=btn(⬅️)
 wasright=btn(➡️)
 wasup=btn(⬆️)
 wasdown=btn(⬇️)
 waso=btn(🅾️)
 wasx=btn(x)
end

-->8
-- all map and camera stuff --

viewheight=16
lvlheights={36,16}
cumheights={}

function init_cumheights()
 cum=0
 for i=1,#lvlheights do
  cum+=lvlheights[i]
  add(cumheights,cum)
 end
end

function update_pos()
 pos=py\8
end

function get_lvl()
 for lvl=1,#lvlheights do
  if -cumheights[lvl]<=pos then
   return lvl
  end
 end
 return 0
end

function get_campos()
 offset=8 -- distance chicken from screen bottom

 -- usual position (middle of level)
 campos=pos-offset

 -- get relative position from lvl bottom
 lvl=get_lvl()
 height=lvlheights[lvl]
 cumheight=cumheights[lvl]
 relpos=-(pos+cumheight-height)

 if relpos < offset then
  -- correct at start of level
  diff=offset-relpos
  campos-=diff
 elseif relpos > height-offset then
  -- correct at end of level
  diff=relpos-(height-offset)
  campos+=diff
 end

 return campos*8
end

function update_camera()
 fac=0.2

 campos=get_campos()
 diff=campos-oldcampos
 smoothpos=oldcampos+fac*diff

 camera(0,smoothpos+0.5)

 oldcampos=smoothpos
end

//mget with camera transform
function mget2(x,y)
 local lvl=get_lvl()
 if lvl!=1 then
  assert() // handle multiple levles
 end
 local height=lvlheights[lvl]

 local tilex=x\8
 local tiley=(y+height*8)\8
 return mget(tilex,tiley)
end

function render_map()
 lvl=get_lvl()
 height=lvlheights[lvl]
 cumheight=cumheights[lvl]

 tilex=16*(lvl-1)
 tiley=0
 sx=0
 sy=-cumheight*8
 tilew=16
 tileh=height

 map(tilex, tiley, sx, sy, tilew, tileh)
end
-->8
-- gameplay code --

function player_movement()
 local dx=0
 local dy=0
 if btnleft() then
  dx-=8
  pd=0
 end

 if btnright() then
  dx+=8
  pd=1
 end

 if btnup() then
  dy-=8
  pd=2
 end

 if btndown() then
  dy+=8
  pd=3
 end

 // player tilemap collsion
 local targx=px+dx
 local targy=py+dy
 local samplex=targx
 local sampley=targy

 if dx!=0 then
  if dx>0 then samplex+=7 end
  c0=fget(mget2(samplex,py),0)
  c1=fget(mget2(samplex,py+7),0)
  if c0 or c1 then
   if dx>0 then
    targx=(samplex-8)\8*8
   else
    targx=(samplex+8)\8*8
   end
  end
 end

 if dy!=0 then
  if dy>0 then sampley+=7 end
  c0=fget(mget2(targx,sampley),0)
  c1=fget(mget2(targx+7,sampley),0)
  if c0 or c1 then
   if dy>0 then
    targy=(sampley-8)\8*8
   else
    targy=(sampley+8)\8*8
   end
  end
 end

 px=targx
 py=targy
end

function check_death()
 -- car collision
 for c in all(cars) do
  pb={x=px+2,y=py,w=4,h=8}
  cb={x=c.x,y=c.y,w=8,h=8}
  if aabb_overlap(pb,cb) then
   dead=true
   died_how="splat"
  end
 end

 local cur_tile=mget2(px,py)
 local on_deadly=fget(cur_tile,1)

 -- test if on log
 for l in all(logs) do
  pb={x=px,y=py,w=8,h=8}
  lb={x=l.x,y=l.y,w=l.w*8,h=8}
  if aabb_overlap(pb,lb) then
   on_deadly=false
  end
 end

 -- test if on lily pad
 for l in all(pads) do
  pb={x=px,y=py,w=8,h=8}
  lpb={x=l.x,y=l.y,w=8,h=8}
  if aabb_overlap(pb,lpb) then
   on_deadly=false
  end
 end

 if on_deadly then
  dead = true
  if cur_tile==66 then
   died_how="drowned"
  end
 end
end

function spawn_pads(y,mask)
 for i=0,15 do
  if band(lshr(mask,15-i),1)==1 then
   add(pads, {x=i*8,y=y})
  end
 end
end

function spawn_car(sp,x)
 sprite=flr(rnd(3))
 sprite=16*sprite+2
 add(cars,{x=x, y=sp.y, s=sp.s,sp=sprite})
end

function spawn_log(sp,x)
 w=flr(rnd(2))+2
 if sp.s>0 then x-=w*8 end
 add(logs,{x=x,y=sp.y,s=sp.s,w=w})
end

function prewarm_spawner(sp)
 step=abs(sp.s)*30*sp.r
 it=128/step
 for i=0,it do
   local ax=i*step
   if sp.s<0 then ax=(136-ax) end
   if sp.ty=="car" then
    spawn_car(sp, ax)
   elseif sp.ty=="log" then
    spawn_log(sp,ax)
   end
 end
end

function update_spawners()
 for sp in all(spawners) do
  if t()-sp.t >= sp.r then
   // spawn obj
   local x=-8
   if sp.s<0 then x=136 end
   if sp.ty=="car" then
    spawn_car(sp, x)
   elseif sp.ty=="log" then
    spawn_log(sp,x)
   end
   sp.t+=sp.r //reset spawn timer
  end
 end
end

function update_cars()
 i=#cars
 while i>0 do
  c=cars[i];
  c.x += c.s

  // delete out of bounds cars
  if (c.s>0 and c.x>136) or
     (c.s<0 and c.x<-8) then
   deli(cars, i)
  end

  i-=1
 end
end

function update_logs()
 i=#logs
 while i>0 do
  local l=logs[i];
  l.x += l.s

  pb={x=px,y=py,w=8,h=8}
  lb={x=l.x+2,y=l.y,w=l.w*8-4,h=8}
  if not dead and
     aabb_overlap(pb,lb) then
   px=(px-l.x+4)\8*8+l.x

   px=max(px,l.x)
   px=min(px,l.x+l.w*8-8)

   if l.pcol != true then
    add(swirls, {x=l.x+2,y=l.y,s=-0.5,t=t()})
    add(swirls, {x=l.x+l.w*8,y=l.y,s=0.5,t=t()})
   end
   l.pcol=true
  else
   l.pcol=false
  end

  // delete out of bounds logs
  if (l.s>0 and l.x>128) or
     (l.s<0 and l.x+l.w*8<0) then
   deli(logs, i)
  end

  i-=1
 end
end

function update_pads()
 for lp in all(pads) do
  pb={x=px,y=py,w=8,h=8}
  lpb={x=lp.x,y=lp.y,w=8,h=8}

  if aabb_overlap(pb,lpb) then
   px=lp.x
   if lp.pcol != true then
    add(swirls, {x=lp.x+1,y=lp.y,s=-0.5,t=t()})
    add(swirls, {x=lp.x+7,y=lp.y,s=0.5,t=t()})
   end
   lp.pcol=true
  else
   lp.pcol=false
  end
 end
end
-->8
-- all dialogue stuff
dialogue={
 {pos=-8,txt={"\"please, be careful,\n my little chicklet!\""}},
 {pos=-15,txt={"\"why would you\n cross the road?\"","\"what could possibly\n be worth such dangers?\""}},
}

-- gets dialogue for current pos
function get_dialogue()
 for dial in all(dialogue) do
  if pos==dial.pos then
   return dial.txt
  end
 end
 return {}
end

-- delete current dialogue card
function del_dialogue()
 for dial in all(dialogue) do
  if pos==dial.pos then
   deli(dial.txt,1)
   tdialstart=nil
  end
 end
end

-- render first dialogue card
-- for current position (if any)
function draw_dialogue()
 txt=get_dialogue()
 if #txt>0 then
  dialoguemode=true

  camera(0,0)
  cls(0)
  local bl=8
  local bt=32
  local br=128-bl-1
  local bb=128-bt-1

  rect(bl,bt,br,bb,7)
  spr(15,bl-2,bt-2,1,1,true,false)
  spr(15,br-5,bt-2,1,1,false,false)
  spr(15,bl-2,bb-5,1,1,true,true)
  spr(15,br-5,bb-5,1,1,false,true)

  sspr(112,16,8,8,bl+8,bb-32,16,16)
  sspr(120,16,8,8,bl+24,bb-32,16,16)
  sspr(112,24,8,8,bl+8,bb-16,16,16)

  if flr(t()*8)%2==0 then
   sspr(120,24,8,8,bl+24,bb-16,16,16)
  else
   sspr(104,24,8,8,bl+24,bb-16,16,16)
  end

  lines=split(txt[1],"\n")

  if tdialstart==nil then
   tdialstart=t()
  end

  local midh=(bl+(br-bl)/2)
  local midv=(bt+(bb-bt)/2)
  for i,l in ipairs(lines) do
   local tl=midv+8*(i-#lines/2)-5
   local ll=midh-2*#l+1
   print(l,ll,tl,7)
  end
 end
end

-- player input to go to next
-- dialogue card
function next_dialogue()
 local tdiff=0.5
 if t()-tdialstart>tdiff then
  if btnleft() or btnright()
    or btnup() or btndown()
    or btno() or btnx() then
   del_dialogue()
   if #get_dialogue()==0 then
    dialoguemode=false
   end
  end
 end
end
-->8
-- draw graphics

function draw_spawners()
 for s in all(spawners) do
  if s.ty=="log" then
   local offset=(t()*s.s*30)%8
   for i=-1,15 do
    spr(66,i*8+offset,s.y)
   end
  end
 end
end

function draw_swirls()
 local i=#swirls
 while i>0 do
  s=swirls[i]
  local t1=t()-s.t
  local col=7
  local speedscale=1
  if t1>0.08 then
   col=6
   speedscale=0.5
  end
  s.x+=s.s*speedscale

  color(col)
  d=-1
  if s.s>0 then d=1 end
  pset(s.x,s.y+0)
  pset(s.x+d*1,s.y+1)
  for i=2,5 do
   pset(s.x+d*2,s.y+i)
  end
  pset(s.x+d*1,s.y+6)
  pset(s.x,s.y+7)


  if t1 > 0.15 then
   deli(swirls,i)
  end

  i-=1
 end
end

function draw_cars()
 for c in all(cars) do
  spr(c.sp,c.x,c.y,1,1,c.s<0)
 end
end

function draw_logs()
 for l in all(logs) do
  for i=1,l.w do
   s=4
   if i>1 and i<l.w then s=3 end
   local sy = l.y
   if l.pcol then sy+=1 end
   spr(s,l.x+(i-1)*8,sy,1,1,i==1)
  end
 end
end

function draw_pads()
 for p in all(pads) do
  local sy=p.y
  if p.pcol then sy+=1 end
  spr(5,p.x,sy)
 end
end

-->8
-- dialogue voice

-- initiate or reset sound
-- variables
function init_voice()
 tstart=t()
 wascons=false
 tsfx=0.0
end

-- dialogue sound update logic
function sfx_voice_update()
 if t() - tstart > tsfx then
  if wascons then
   wascons=false
   if rnd(1) > 0.8 then
    sfx_emph()
    tsfx=(10/120)
   else
    sfx_vowel()
    tsfx=(14/120)
   end
  else
   wascons=true
   sfx_cons()
   tsfx=(26/120)
  end
  tstart=t()
 end
end

-- play random consonant
function sfx_cons()
 local i = flr(rnd(4)) + 21
 sfx(i, 3, 0, 8)
end

-- play random vowel
function sfx_vowel()
 local i = flr(rnd(4)) + 25
 sfx(i, 3, 0, 12)
end

-- play random emphasized vowel
function sfx_emph()
 local i = flr(rnd(2)) + 29
 sfx(i, 3, 0, 24)
end
__gfx__
fff77fffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000777700
fff7799ffff77ffff00ff00f444444444444449ffbbffbbf00000000000000000000000000000000000000000000000000000000000000000000000000070700
fff778fffff7799f888888884444444444444449bbbffbbb00000000000000000000000000000000000000000000000000000000000000000000000077770077
f77777fffff778ff888888774444444444444449bbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000070007
777777fff77777ff888888774444444444444449bbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000077777
f7777fff777777ff888888884444444444444449bbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000707
fff9fffff7777ffff00ff00f444444444444449ffbbbbbbf00000000000000000000000000000000000000000000000000000000000000000000000000000700
fff99ffffff99fffffffffffffffffffffffffffffbbbbff00000000000000000000000000000000000000000000000000000000000000000000000000000700
fffffffffff77fffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fff77ffffff799fff00ff00f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fff799fffff78fffcccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fff78fffff7777ffcccccc7700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff7777fff777777fcccccc7700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f777777fff7777ffcccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff7777ffff9ff9fff00ff00f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff9ff9ffff9ff9ffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fffffffffff77fffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffff888fffffff
fff77fffff977ffff00ff00f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fff88f8888ffffff
ff977ffffff77fffaaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff88888888f88fff
fff77fffff7777ffaaaaaa770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff888888888888ff
ff7777fff777777faaaaaa770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff888888888888ff
f777777fff7777ffaaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff88877788888fff
ff7777ffff9ff9fff00ff00f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fff677777888ffff
ff9ff9ffff9ff9ffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fff67777770fffff
ffffffff800000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777ffffffff67770777fffff
ffffffff0880008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007799999ffff677777799999f
ffffffff00088800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000079999999fff6777779999999
ffffffff0008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007999ffffff677777799999ff
ffffffff000888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000789999fff677777778899fff
ff7777ff08800880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078899fff677777767888ffff
f777777f0800000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000007888ffff777677767878ffff
ff9ff9ff8000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000006778ffff776777776777ffff
5555555533333333cccccccc00000000000000000000000000000000000000000000000000000000000000003333333666663333333333300000000003333333
5555555533333333ccccc7cc00000000000000000000000000000000000000000000000000000000000000003333333366663333333333044444444440333333
5555555533b33333cccc7c77000000000000000000000000000000000000000000000000000000000000000033b333366663333333b330444444444444033333
5555555533333333cccccccc00000000000000000000000000000000000000000000000000000000000000003333333666663333333304444444444444403333
5555555533333333ccc7cccc00000000000000000000000000000000000000000000000000000000000000003333333366663333333044444444444444440333
5555555533333333c77c77cc00000000000000000000000000000000000000000000000000000000000000003333333666633333330444444444444444444033
55555555333333b3cccccccc0000000000000000000000000000000000000000000000000000000000000000333333b6666633b3304444444444444444444403
55555555b3333333cccccccc0000000000000000000000000000000000000000000000000000000000000000b333333366633333000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033333ccc330444444444444444444033
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000333888ac330444444444444444444033
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000003338a8cc330444444444444444444033
555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000999888b3330444444444444444444033
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a93b3b3330444440000000000044033
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000009993b3b3330444440aaaa0aaaa044033
5555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b33b3b3330444400aaaa0aaaa044033
7755775500000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b333333b30444040aaaa0aaaa044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444440aaaa0aaaa044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444440000000000044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444440aaaa0aaaa044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444440aaaa0aaaa044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444440aaaa0aaaa044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444440aaaa0aaaa044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044440000000000044033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444404444444444444444033
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000330444044444044400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000330444044444044400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000330444044444044400000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003304440444a4044400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000330444044444044400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000330444044444044400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000330444044444044400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b30444044444044400000000
1414c5c5c514141414141414d5d6e5f5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414c5c5c514141414141414d7e7e6f6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
141414141414141414141414b4c4c5c5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
14141414141414141414141414141414000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000010101000000000000000000000000010101010000000000000000000000000001010100000000000000000000000000010100
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505050505050505050505050505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505050505050505050505050505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242424242424242424242424200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505050505050505050505050505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414d4e4e4f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
001000000d05500005140550c005110550c005100550b0050f055000051405500005080550000514055000050d055000051405500005110550100510055130050f05507005140551300508055000051405500005
01100000190550000019055000001d055000001c055000001b05500000180550000014055000001805500000190550000019055000001d055000001c055000001b055000001805500000140550c0001805500000
01100000007000070025750227502275524750227502075518750197501a7551b7501b755207551475114755007000070025750227502275524750227502075518750197501a7551b7501b755207551475114755
011000000d0550a005140550000508055000050a055000050c05500005140550000508055000050505500005070550000516055000050c0550000516055000051105500005140550000511055000051405500000
011000001905500005190550000514055000051605500005180550000518055180051405500005110550000513055000051805500005000050000518055000050000500005180550000500005000051805500000
011000000070000700257502275022755247502275020755187501d750207502275024750297502c7502e755307512e7552b7552875524750227501f7501c7551d7551e7551f75520751207551b7501475000000
011000000d055000051405500005080550000517055000050605500005160550000507055000051305500005080550000514055000050a0550000508055000050d05500005000050000500005000050805500005
01100000190551800519055000051405500005190550000512055000051905500005130550000514055000051405520750190551f7501f750190551d7511d7501975119750197501975500005000050000000000
01100000007002470025752227502275024755227551d755207511d7551e7552775127750257552275022755207551d755207511d7501b7501b75519750197551955524000195552470019555000000000000000
01100000007002470025752227502275024755227551d755207511d7551e7552775127750257552275022755207551d755207511d7501d7501d7551b7501b7551975019755195522400018552247001755200000
011000000c055000051405500005080550000514055000050c0550000514055000050805500005060550000505055000051405500005080550000514055000050d05500005140550000511055000051005500005
011000001d75500000180551b75514055000001e755000001d755000001e0551b75514055000001d755000001b755000001905519750197551d75516750167551d7501d7550d0550000000000000000000000000
011000002975520750247552775127755247552a7502a7552975520750247552775127755247552a75524755277551d7502075525751257552075522751227552075020750207502075020755227512275525755
011000000c055000001405500000080550000014055000000f0550000014055000000805500000060550000005055000001405500000080550000014055000000d05500000000000000000000000000a05500000
00100000187550000018055187501875500000167550000018755000001e055000001405500000120550000019755000001905518751187551975016750167551475014755145501455513550135551255012555
01100000247501b7501e75524750247551e75522751227552075020750207502075020755227502275524755257501d7502075524751247551d7502275022755207502075520550205551f5501f5551e5501e555
001000000605500000120550000007055000001305500000080550000014055000000a05500000160550000003055000000f05500000080550000014055000000105500000000000000000000000000805500000
001000001675500700160551b75013055197051b0551a00519055147551d055167551675500000147501475500000147551405500000000000000012750127551175111755000000000000000000000000000000
0110000022755197501e7552775127755257552275022755207551d750207552275122755207551d7501d7551d7551b7501d75520751207551d7551b7501b755197501975520550205551f5501f5551e5501e555
001000001205500000160550000013055000001a0550000014055000001d0550000016055000001d0550000000000000001405519750197551675512754127551175011755140551100011055140001405500000
001000002c7552a7502c75529750297552c7512a7552975027755267502775524750247552775126755247502275521750227551d7501d7551e75520751227552575525705147501475519750197550000000000
00010000277102a721297612b761287712a7612674128721267002570124701247012470126701277012170122701237012470125701257010070100701007010070100701007010070100701007010070100701
000100002b7102a7312b761287712a76129761287512a721000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000297102e7212d7412e7612c7612b7512c73129721000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000277102674127761277712877126751287412a721000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000028730297512776129771297712876127761287512875127741287312a7310a70100700247002470023700000000000000000000000000000000000000000000000000000000000000000000000000000
000100002671028730257402674028740277502875026760237602476026760257502570024700247002570025700000000000000000000000000000000000000000000000000000000000000000000000000000
000100002671028721277312a751297612a7612976126761287412773128721267112270023700257002470000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002275024741277612577127771257712376124761257612475125741237310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002d7102f7302f74031760307702f770307702f770307602e7602d7602e7602b7502a7502b7402973028730297202772027720297302773027730287302970028700277002670025700267002770029700
0001000026750297502775027750277502a750297502c7502b7502c7502f7502d750307502f75031750317502f7502f750307502f7502e7502f75029750297500000000000000000000000000000000000000000
013c00000c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c0550c055
__music__
01 00010244
00 03040544
00 00010244
00 06070844
00 00010244
00 03040544
00 00010244
00 06070944
00 0a0b0c44
00 0d0e0f44
00 0a0b0c44
00 10111244
00 0a0b0c44
00 0d0e0f44
00 0a0b0c44
02 10131444
00 40414244
00 41424344
00 41424344
00 41424344
00 4a4b4c44
00 4d4e4f44
00 50515244
00 50535444

